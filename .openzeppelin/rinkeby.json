{
  "manifestVersion": "3.1",
  "impls": {
    "cc8985dd000eeb1bf9778b983a1c48da85b86a7c8692d5549922a77ebb107009": {
      "address": "0xCaD52EafA1644e744f4013e578dE1F35f19B7c7c",
      "txHash": "0x3e5f7e9a21c5f52d7e8c31983d8a4462010ee53c3d7d67adfc1ed81ba721cad7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20PausableUpgradeable.sol:37"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_accountBalanceSnapshots",
            "type": "t_mapping(t_address,t_struct(Snapshots)6428_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20SnapshotUpgradeable.sol:57"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_totalSupplySnapshots",
            "type": "t_struct(Snapshots)6428_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20SnapshotUpgradeable.sol:58"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_currentSnapshotId",
            "type": "t_struct(Counter)7929_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20SnapshotUpgradeable.sol:61"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20SnapshotUpgradeable.sol:189"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5470_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)5470_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5470_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)8245_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)8245_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7980_storage"
              }
            ]
          },
          "t_struct(Set)7980_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(Snapshots)6428_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
          },
          "t_struct(Snapshots)6428_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(Counter)7929_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "f188c192053637bc940f3b6fdc4c57dbf70300c369cb324704f6f5e44632c795": {
      "address": "0xac47f49579c1Aabc231502007fA056635Fc7dDa8",
      "txHash": "0x66bc3b3543f4a37f50fe06a7dcd7a5ae3404767d9a3bb7799ef6fb418bb152b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5470_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)7332",
            "src": "hunters/WalletHunters.sol:68"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsToken",
            "type": "t_contract(IERC20Mintable)3508",
            "src": "hunters/WalletHunters.sol:69"
          },
          {
            "contract": "WalletHunters",
            "label": "configuration",
            "type": "t_struct(Configuration)2067_storage",
            "src": "hunters/WalletHunters.sol:71"
          },
          {
            "contract": "WalletHunters",
            "label": "requestCounter",
            "type": "t_struct(Counter)7929_storage",
            "src": "hunters/WalletHunters.sol:72"
          },
          {
            "contract": "WalletHunters",
            "label": "walletRequests",
            "type": "t_mapping(t_uint256,t_struct(WalletRequest)2042_storage)",
            "src": "hunters/WalletHunters.sol:73"
          },
          {
            "contract": "WalletHunters",
            "label": "requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)2051_storage)",
            "src": "hunters/WalletHunters.sol:74"
          },
          {
            "contract": "WalletHunters",
            "label": "activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)8366_storage)",
            "src": "hunters/WalletHunters.sol:75"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7332": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IERC20Mintable)3508": {
            "label": "contract IERC20Mintable"
          },
          "t_struct(Configuration)2067_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)7929_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(WalletRequest)2042_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.WalletRequest)"
          },
          "t_struct(WalletRequest)2042_storage": {
            "label": "struct WalletHunters.WalletRequest",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "finishTime",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)2051_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)2051_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)2056_storage)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)2056_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)2056_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)8366_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)8366_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7980_storage"
              }
            ]
          },
          "t_struct(Set)7980_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5470_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5470_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)8245_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)8245_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7980_storage"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "4642f60485f8b476a44cb26af704d7f454324de81035eb17f840bd8f41f02579": {
      "address": "0xd75e68AD1569e6bC289a3f856625b27F3Cd4FeA0",
      "txHash": "0x392ac7d019b0183ae4d8213c5020742df66446ae84419b5e187d3385ad52e947",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5470_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "RewardsDistributor",
            "label": "rewardsToken",
            "type": "t_contract(IERC20Upgradeable)7332",
            "src": "RewardsDistributor.sol:34"
          },
          {
            "contract": "RewardsDistributor",
            "label": "snapshotToken",
            "type": "t_contract(IERC20Snapshot)3553",
            "src": "RewardsDistributor.sol:35"
          },
          {
            "contract": "RewardsDistributor",
            "label": "lastSnapshotId",
            "type": "t_uint256",
            "src": "RewardsDistributor.sol:37"
          },
          {
            "contract": "RewardsDistributor",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)77_storage)",
            "src": "RewardsDistributor.sol:38"
          },
          {
            "contract": "RewardsDistributor",
            "label": "rewardsCounter",
            "type": "t_struct(Counter)7929_storage",
            "src": "RewardsDistributor.sol:39"
          },
          {
            "contract": "RewardsDistributor",
            "label": "paidUsers",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "RewardsDistributor.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7332": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IERC20Snapshot)3553": {
            "label": "contract IERC20Snapshot"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Reward)77_storage)": {
            "label": "mapping(uint256 => struct RewardsDistributor.Reward)"
          },
          "t_struct(Reward)77_storage": {
            "label": "struct RewardsDistributor.Reward",
            "members": [
              {
                "label": "totalReward",
                "type": "t_uint256"
              },
              {
                "label": "totalShare",
                "type": "t_uint256"
              },
              {
                "label": "fromSnapshotId",
                "type": "t_uint256"
              },
              {
                "label": "toSnapshotId",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Counter)7929_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5470_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5470_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)8245_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)8245_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7980_storage"
              }
            ]
          },
          "t_struct(Set)7980_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "9c975dd7c8a10da56c67b58a747f417478a499c39286531258e4d9a2d8905026": {
      "address": "0xe88982EC778A9c2f6bE6924CFdE0bDA2af5d0f57",
      "txHash": "0x47005f47adc16645476cea55aa1aef19ebe224570b415857fc1e44a86e6f5558",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5639_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)7588",
            "src": "hunters/WalletHunters.sol:68"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsToken",
            "type": "t_contract(IERC20Mintable)3677",
            "src": "hunters/WalletHunters.sol:69"
          },
          {
            "contract": "WalletHunters",
            "label": "configuration",
            "type": "t_struct(Configuration)2228_storage",
            "src": "hunters/WalletHunters.sol:71"
          },
          {
            "contract": "WalletHunters",
            "label": "requestCounter",
            "type": "t_struct(Counter)9408_storage",
            "src": "hunters/WalletHunters.sol:72"
          },
          {
            "contract": "WalletHunters",
            "label": "walletRequests",
            "type": "t_mapping(t_uint256,t_struct(WalletRequest)2203_storage)",
            "src": "hunters/WalletHunters.sol:73"
          },
          {
            "contract": "WalletHunters",
            "label": "requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)2212_storage)",
            "src": "hunters/WalletHunters.sol:74"
          },
          {
            "contract": "WalletHunters",
            "label": "activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)10405_storage)",
            "src": "hunters/WalletHunters.sol:75"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7588": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IERC20Mintable)3677": {
            "label": "contract IERC20Mintable"
          },
          "t_struct(Configuration)2228_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)9408_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(WalletRequest)2203_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.WalletRequest)"
          },
          "t_struct(WalletRequest)2203_storage": {
            "label": "struct WalletHunters.WalletRequest",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "finishTime",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)2212_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)2212_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)2217_storage)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)2217_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)2217_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)10405_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)10405_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10019_storage"
              }
            ]
          },
          "t_struct(Set)10019_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5639_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5639_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)10284_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)10284_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10019_storage"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d227d0908c38f5f39f4affac0344c334228b0931331a5808358e106f211395ec": {
      "address": "0x5e7c992a1Dcc43590cD00C86F2455bA890323890",
      "txHash": "0x36ad3964c52ca0c7d669b0bb656b3daad11702508390fdd51ea2d17988d166a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5639_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "RewardsDistributor",
            "label": "rewardsToken",
            "type": "t_contract(IERC20Upgradeable)7588",
            "src": "RewardsDistributor.sol:34"
          },
          {
            "contract": "RewardsDistributor",
            "label": "snapshotToken",
            "type": "t_contract(IERC20Snapshot)3722",
            "src": "RewardsDistributor.sol:35"
          },
          {
            "contract": "RewardsDistributor",
            "label": "lastSnapshotId",
            "type": "t_uint256",
            "src": "RewardsDistributor.sol:37"
          },
          {
            "contract": "RewardsDistributor",
            "label": "rewards",
            "type": "t_mapping(t_uint256,t_struct(Reward)314_storage)",
            "src": "RewardsDistributor.sol:38"
          },
          {
            "contract": "RewardsDistributor",
            "label": "rewardsCounter",
            "type": "t_struct(Counter)9408_storage",
            "src": "RewardsDistributor.sol:39"
          },
          {
            "contract": "RewardsDistributor",
            "label": "paidUsers",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "RewardsDistributor.sol:40"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7588": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IERC20Snapshot)3722": {
            "label": "contract IERC20Snapshot"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Reward)314_storage)": {
            "label": "mapping(uint256 => struct RewardsDistributor.Reward)"
          },
          "t_struct(Reward)314_storage": {
            "label": "struct RewardsDistributor.Reward",
            "members": [
              {
                "label": "totalReward",
                "type": "t_uint256"
              },
              {
                "label": "totalShare",
                "type": "t_uint256"
              },
              {
                "label": "fromSnapshotId",
                "type": "t_uint256"
              },
              {
                "label": "toSnapshotId",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(Counter)9408_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5639_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5639_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)10284_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)10284_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10019_storage"
              }
            ]
          },
          "t_struct(Set)10019_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "021e8bda8edc9a0140a45b704e0b8ee2c4d329f9067e5d952342ff57eefb9b2a": {
      "address": "0xC0BeabB1205784bcAF38a45f4D6bd9B1247A12DC",
      "txHash": "0xf02287e4c8c266992e8cb317d68c56f7064be77ce16766a709d21942ea49dad0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)10405_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)9782_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:480"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5639_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "RewardItems",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)9408_storage",
            "src": "RewardItems.sol:24"
          }
        ],
        "types": {
          "t_struct(Counter)9408_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5639_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)5639_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)10284_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)10284_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10019_storage"
              }
            ]
          },
          "t_struct(Set)10019_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_struct(UintSet)10405_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)10405_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10019_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)9782_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)9464_storage"
              }
            ]
          },
          "t_struct(Map)9464_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)9456_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)9456_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)9456_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xe551409B379b602625eeFDC21f38Cc5d045E5d9F",
    "txHash": "0x8349615d399fceb04c6d17d9316786589c5ecfa8c6fb27d561357266fb04a9b1"
  }
}
