{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x99DfFd53399E65e67E0e27Ec7dA605C56cEa8274",
    "txHash": "0x160ce6fb687ac27fe3e9fde5308204ae7f5c2d2678fe44fe6ccea728d37ac847"
  },
  "proxies": [
    {
      "address": "0xde62ca7EA42366D9199A3B293250d5E0Bab01874",
      "txHash": "0x0baa3a6bbc3bdac1315b2d69818fb9a80f6db9a24f45bfbf566814066752ea02",
      "kind": "transparent"
    },
    {
      "address": "0x1327a76A1AeD1d8860a14922A5B3B8246A208759",
      "txHash": "0x4880c39d98abdfe455e64c9e0aa778ca48e0ae678e069b171ce96e98be3ab12b",
      "kind": "transparent"
    },
    {
      "address": "0x20ae30F8013247Cb4340ea42b01f6Be9911e25B6",
      "txHash": "0xa04821c517aee7436e98be804401f30d60e99358c58f31824302fa7a8710161d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e7e86114a5a2f08d48be4500daf3c8b47b3e3f5b3d94b46043c15c38d9678cde": {
      "address": "0x4E4BFeA786bcBcF65C879B240b70F17298AAC97d",
      "txHash": "0xf3167a4f0dcf237519b0839f8532062d7a52c0500e3c13691453dac2f283ee3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "gsn/ERC2771ContextUpgradeable.sol:11"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "gsn/ERC2771ContextUpgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)6335_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)8284",
            "src": "hunters/WalletHunters.sol:72"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsToken",
            "type": "t_contract(IERC20Mintable)4133",
            "src": "hunters/WalletHunters.sol:73"
          },
          {
            "contract": "WalletHunters",
            "label": "configuration",
            "type": "t_struct(Configuration)2263_storage",
            "src": "hunters/WalletHunters.sol:75"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestCounter",
            "type": "t_struct(Counter)10104_storage",
            "src": "hunters/WalletHunters.sol:76"
          },
          {
            "contract": "WalletHunters",
            "label": "_requests",
            "type": "t_mapping(t_uint256,t_struct(Request)2238_storage)",
            "src": "hunters/WalletHunters.sol:77"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)2247_storage)",
            "src": "hunters/WalletHunters.sol:78"
          },
          {
            "contract": "WalletHunters",
            "label": "_activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)11101_storage)",
            "src": "hunters/WalletHunters.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)8284": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IERC20Mintable)4133": {
            "label": "contract IERC20Mintable"
          },
          "t_struct(Configuration)2263_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)10104_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Request)2238_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.Request)"
          },
          "t_struct(Request)2238_storage": {
            "label": "struct WalletHunters.Request",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "creationTime",
                "type": "t_uint256"
              },
              {
                "label": "finishTime",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)2247_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)2247_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)2252_storage)"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)2252_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)2252_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_address,t_struct(UintSet)11101_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)11101_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10715_storage"
              }
            ]
          },
          "t_struct(Set)10715_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)6335_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)6335_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)10980_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)10980_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10715_storage"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "20ec51f43ec7ce25d14ce31d04110a95b323dd4bcbc7ba8f940edf801820a3d3": {
      "address": "0x0Eb866fF2FdE86789C376ad8c947C980136c824a",
      "txHash": "0xf550149456718e3c2a39cdf493de7177cf9dcb14b0f082ee428d8cafee200f55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5312_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)9704_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "RewardItems",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)9027_storage",
            "src": "RewardItems.sol:26"
          }
        ],
        "types": {
          "t_struct(Counter)9027_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)9704_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)9704_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9427_storage"
              }
            ]
          },
          "t_struct(Set)9427_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5312_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5312_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "d749cc9b2d0d525364db8c1e99408530c4f7c5b61c3c5d8c9ae7e874b7c8ca53": {
      "address": "0xdd5536512E6269f31b3313Cde8055e55c0E47D96",
      "txHash": "0xd5e690fb928376bfe53da33a5d411834361c8ca1ec8f826fdbef3b6d909c4b76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5313_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)9705_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:32"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:384"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:168"
          },
          {
            "contract": "RewardItems",
            "label": "_tokenIdTracker",
            "type": "t_struct(Counter)9028_storage",
            "src": "RewardItems.sol:28"
          }
        ],
        "types": {
          "t_struct(Counter)9028_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)9705_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)9705_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9428_storage"
              }
            ]
          },
          "t_struct(Set)9428_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5313_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5313_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    },
    "7b8d6b4721260db686a56fe756ce374af61ad910bd485f9d260702374c13e79d": {
      "address": "0xE0fDcd9bfd7B9Caa77354De5F840117C822aBa43",
      "txHash": "0xc817560c4d199f4480b93eac5674627e6a129e36f364edbe4a8a74c7c0607107",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5526_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)6662",
            "src": "hunters/WalletHunters.sol:69"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsToken",
            "type": "t_contract(IERC20Mintable)4425",
            "src": "hunters/WalletHunters.sol:70"
          },
          {
            "contract": "WalletHunters",
            "label": "configuration",
            "type": "t_struct(Configuration)2406_storage",
            "src": "hunters/WalletHunters.sol:72"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestCounter",
            "type": "t_struct(Counter)9241_storage",
            "src": "hunters/WalletHunters.sol:73"
          },
          {
            "contract": "WalletHunters",
            "label": "_requests",
            "type": "t_mapping(t_uint256,t_struct(Request)2375_storage)",
            "src": "hunters/WalletHunters.sol:74"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)2388_storage)",
            "src": "hunters/WalletHunters.sol:75"
          },
          {
            "contract": "WalletHunters",
            "label": "_activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)10045_storage)",
            "src": "hunters/WalletHunters.sol:76"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6662": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IERC20Mintable)4425": {
            "label": "contract IERC20Mintable"
          },
          "t_struct(Configuration)2406_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              },
              {
                "label": "requestReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)9241_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Request)2375_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.Request)"
          },
          "t_struct(Request)2375_storage": {
            "label": "struct WalletHunters.Request",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "creationTime",
                "type": "t_uint256"
              },
              {
                "label": "finishTime",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)2388_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)2388_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "voters",
                "type": "t_struct(AddressSet)9918_storage"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)2393_storage)"
              }
            ]
          },
          "t_struct(AddressSet)9918_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9641_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)2393_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)2393_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Set)9641_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)10045_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)10045_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9641_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5526_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5526_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "e46ebb382a865fc6bb9b5cc31d89c4909a624422e9d3c9b5d4b2e61635b3efd4": {
      "address": "0x434b231811B7FDEefA2690cD975357D94f203BeE",
      "txHash": "0x23be73bc49d52ed5352a83d90d10d52d3f19c31a0146d5d0f3dc83142700018c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5758_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)6894",
            "src": "hunters/WalletHunters.sol:67"
          },
          {
            "contract": "WalletHunters",
            "label": "configuration",
            "type": "t_struct(Configuration)2573_storage",
            "src": "hunters/WalletHunters.sol:69"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsPool",
            "type": "t_uint256",
            "src": "hunters/WalletHunters.sol:70"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestCounter",
            "type": "t_struct(Counter)9473_storage",
            "src": "hunters/WalletHunters.sol:71"
          },
          {
            "contract": "WalletHunters",
            "label": "_requests",
            "type": "t_mapping(t_uint256,t_struct(Request)2542_storage)",
            "src": "hunters/WalletHunters.sol:72"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)2555_storage)",
            "src": "hunters/WalletHunters.sol:73"
          },
          {
            "contract": "WalletHunters",
            "label": "_activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)10277_storage)",
            "src": "hunters/WalletHunters.sol:74"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)6894": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(Configuration)2573_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              },
              {
                "label": "requestReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)9473_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Request)2542_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.Request)"
          },
          "t_struct(Request)2542_storage": {
            "label": "struct WalletHunters.Request",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "creationTime",
                "type": "t_uint256"
              },
              {
                "label": "finishTime",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)2555_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)2555_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "voters",
                "type": "t_struct(AddressSet)10150_storage"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)2560_storage)"
              }
            ]
          },
          "t_struct(AddressSet)10150_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9873_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)2560_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)2560_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Set)9873_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)10277_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)10277_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9873_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5758_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5758_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "ac22983b8cf3a00c957816dd4b533a365f1d1c07a68aaca6bf8903b3b9490468": {
      "address": "0x08f28c944513a6B2b6Ac95eFA09abF99e13D29ef",
      "txHash": "0x75b5d65aff4b197d07fd784cfbe582c0fe0b38e7481921aa2476444cd30251d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)5950_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:72"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:222"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)7086",
            "src": "hunters/WalletHunters.sol:65"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsPool",
            "type": "t_uint256",
            "src": "hunters/WalletHunters.sol:67"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestCounter",
            "type": "t_struct(Counter)9665_storage",
            "src": "hunters/WalletHunters.sol:68"
          },
          {
            "contract": "WalletHunters",
            "label": "_requests",
            "type": "t_mapping(t_uint256,t_struct(Request)2545_storage)",
            "src": "hunters/WalletHunters.sol:69"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)2558_storage)",
            "src": "hunters/WalletHunters.sol:70"
          },
          {
            "contract": "WalletHunters",
            "label": "_activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)10469_storage)",
            "src": "hunters/WalletHunters.sol:71"
          },
          {
            "contract": "WalletHunters",
            "label": "_configurations",
            "type": "t_array(t_struct(Configuration)2576_storage)dyn_storage",
            "src": "hunters/WalletHunters.sol:73"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)7086": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)9665_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Request)2545_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.Request)"
          },
          "t_struct(Request)2545_storage": {
            "label": "struct WalletHunters.Request",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "creationTime",
                "type": "t_uint256"
              },
              {
                "label": "configurationIndex",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)2558_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)2558_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "voters",
                "type": "t_struct(AddressSet)10342_storage"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)2563_storage)"
              }
            ]
          },
          "t_struct(AddressSet)10342_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10065_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)2563_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)2563_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Set)10065_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)10469_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)10469_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10065_storage"
              }
            ]
          },
          "t_array(t_struct(Configuration)2576_storage)dyn_storage": {
            "label": "struct WalletHunters.Configuration[]"
          },
          "t_struct(Configuration)2576_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              },
              {
                "label": "requestReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)5950_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)5950_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "afb7708a34d5f841445969834a5a9e2d0567819a37bed38c095fcd9beb10dfa3": {
      "address": "0x578545b17202A94b406f90be2d3f956d4feD87E3",
      "txHash": "0x3e1a8ea665ebe9ada061440577b8e7ae737bc5999a9a181de8c012a2b216e65f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "WalletHunters",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)1665",
            "src": "contracts/hunters/WalletHunters.sol:65"
          },
          {
            "contract": "WalletHunters",
            "label": "rewardsPool",
            "type": "t_uint256",
            "src": "contracts/hunters/WalletHunters.sol:67"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestCounter",
            "type": "t_struct(Counter)3771_storage",
            "src": "contracts/hunters/WalletHunters.sol:68"
          },
          {
            "contract": "WalletHunters",
            "label": "_requests",
            "type": "t_mapping(t_uint256,t_struct(Request)7928_storage)",
            "src": "contracts/hunters/WalletHunters.sol:69"
          },
          {
            "contract": "WalletHunters",
            "label": "_requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)7941_storage)",
            "src": "contracts/hunters/WalletHunters.sol:70"
          },
          {
            "contract": "WalletHunters",
            "label": "_activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)4717_storage)",
            "src": "contracts/hunters/WalletHunters.sol:71"
          },
          {
            "contract": "WalletHunters",
            "label": "_configurations",
            "type": "t_array(t_struct(Configuration)7959_storage)dyn_storage",
            "src": "contracts/hunters/WalletHunters.sol:73"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1665": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3771_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Request)7928_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.Request)"
          },
          "t_struct(Request)7928_storage": {
            "label": "struct WalletHunters.Request",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "creationTime",
                "type": "t_uint256"
              },
              {
                "label": "configurationIndex",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)7941_storage)": {
            "label": "mapping(uint256 => struct WalletHunters.RequestVoting)"
          },
          "t_struct(RequestVoting)7941_storage": {
            "label": "struct WalletHunters.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "voters",
                "type": "t_struct(AddressSet)4590_storage"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)7946_storage)"
              }
            ]
          },
          "t_struct(AddressSet)4590_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4315_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)7946_storage)": {
            "label": "mapping(address => struct WalletHunters.SheriffVote)"
          },
          "t_struct(SheriffVote)7946_storage": {
            "label": "struct WalletHunters.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Set)4315_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)4717_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)4717_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4315_storage"
              }
            ]
          },
          "t_array(t_struct(Configuration)7959_storage)dyn_storage": {
            "label": "struct WalletHunters.Configuration[]"
          },
          "t_struct(Configuration)7959_storage": {
            "label": "struct WalletHunters.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              },
              {
                "label": "requestReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "11442d332aea21bc4ad34f8d6a8bee83936004816b717894381097be775dae5a": {
      "address": "0x8BDC5907F1B868cA1125D08150D5C871aC9Bd25e",
      "txHash": "0x7881e646ea8a3ad8f94c1780c443687cabf6754acfd35df1faad1f86c13f7919",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:12"
          },
          {
            "contract": "ERC2771ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/metatx/ERC2771ContextUpgradeable.sol:43"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)302_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:73"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:252"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)1665",
            "src": "contracts/hunters/WalletHuntersV2.sol:81"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "rewardsPool",
            "type": "t_uint256",
            "src": "contracts/hunters/WalletHuntersV2.sol:83"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_requestCounter",
            "type": "t_struct(Counter)3771_storage",
            "src": "contracts/hunters/WalletHuntersV2.sol:84"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_requests",
            "type": "t_mapping(t_uint256,t_struct(Request)10221_storage)",
            "src": "contracts/hunters/WalletHuntersV2.sol:85"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_requestVotings",
            "type": "t_mapping(t_uint256,t_struct(RequestVoting)10234_storage)",
            "src": "contracts/hunters/WalletHuntersV2.sol:86"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_activeRequests",
            "type": "t_mapping(t_address,t_struct(UintSet)4717_storage)",
            "src": "contracts/hunters/WalletHuntersV2.sol:87"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_configurations",
            "type": "t_array(t_struct(Configuration)10252_storage)dyn_storage",
            "src": "contracts/hunters/WalletHuntersV2.sol:88"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_wantedLists",
            "type": "t_mapping(t_uint256,t_struct(WantedList)10259_storage)",
            "src": "contracts/hunters/WalletHuntersV2.sol:90"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_sheriffVotes",
            "type": "t_mapping(t_bytes32,t_int256)",
            "src": "contracts/hunters/WalletHuntersV2.sol:91"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/hunters/WalletHuntersV2.sol:94"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/hunters/WalletHuntersV2.sol:95"
          },
          {
            "contract": "WalletHuntersV2",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/hunters/WalletHuntersV2.sol:96"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)1665": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)3771_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Request)10221_storage)": {
            "label": "mapping(uint256 => struct WalletHuntersV2.Request)"
          },
          "t_struct(Request)10221_storage": {
            "label": "struct WalletHuntersV2.Request",
            "members": [
              {
                "label": "hunter",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_uint256"
              },
              {
                "label": "creationTime",
                "type": "t_uint256"
              },
              {
                "label": "configurationIndex",
                "type": "t_uint256"
              },
              {
                "label": "discarded",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RequestVoting)10234_storage)": {
            "label": "mapping(uint256 => struct WalletHuntersV2.RequestVoting)"
          },
          "t_struct(RequestVoting)10234_storage": {
            "label": "struct WalletHuntersV2.RequestVoting",
            "members": [
              {
                "label": "votesFor",
                "type": "t_uint256"
              },
              {
                "label": "votesAgainst",
                "type": "t_uint256"
              },
              {
                "label": "voters",
                "type": "t_struct(AddressSet)4590_storage"
              },
              {
                "label": "votes",
                "type": "t_mapping(t_address,t_struct(SheriffVote)10239_storage)"
              }
            ]
          },
          "t_struct(AddressSet)4590_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4315_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(SheriffVote)10239_storage)": {
            "label": "mapping(address => struct WalletHuntersV2.SheriffVote)"
          },
          "t_struct(SheriffVote)10239_storage": {
            "label": "struct WalletHuntersV2.SheriffVote",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "voteFor",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(Set)4315_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_struct(UintSet)4717_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)4717_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4315_storage"
              }
            ]
          },
          "t_array(t_struct(Configuration)10252_storage)dyn_storage": {
            "label": "struct WalletHuntersV2.Configuration[]"
          },
          "t_struct(Configuration)10252_storage": {
            "label": "struct WalletHuntersV2.Configuration",
            "members": [
              {
                "label": "votingDuration",
                "type": "t_uint256"
              },
              {
                "label": "sheriffsRewardShare",
                "type": "t_uint256"
              },
              {
                "label": "fixedSheriffReward",
                "type": "t_uint256"
              },
              {
                "label": "minimalVotesForRequest",
                "type": "t_uint256"
              },
              {
                "label": "minimalDepositForSheriff",
                "type": "t_uint256"
              },
              {
                "label": "requestReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(WantedList)10259_storage)": {
            "label": "mapping(uint256 => struct WalletHuntersV2.WantedList)"
          },
          "t_struct(WantedList)10259_storage": {
            "label": "struct WalletHuntersV2.WantedList",
            "members": [
              {
                "label": "sheriff",
                "type": "t_address"
              },
              {
                "label": "rewardPool",
                "type": "t_uint256"
              },
              {
                "label": "configurationIndex",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_int256)": {
            "label": "mapping(bytes32 => int256)"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)302_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)302_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
