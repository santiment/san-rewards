{
  "contractName": "SanMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveInternal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferInternal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/nailkhaf/Projects/san-games/contracts/mock/SanMock.sol\":\"SanMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/nailkhaf/Projects/san-games/contracts/mock/ERC20Mock.sol\":{\"keccak256\":\"0x382826b0d07395c1a6a526a5e49ba45bbd029374eb64281cc180756517c06163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7da687562183ef9eaf0d1422e7e29c59ee90dfa6d53a92e982507fe02bf47dc9\",\"dweb:/ipfs/QmQDmYwFeBqeWwe8UjRmtkiqoi9ZNi51hmd7gsLkpU3EPx\"]},\"/home/nailkhaf/Projects/san-games/contracts/mock/SanMock.sol\":{\"keccak256\":\"0x58731e7d7f38ff4b16fafe3c8c248513e0bd41162d50150b5c4c28dc8ea8a3c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e86af31830e121e7fab14ba32e556ffd5511542655f561b26ff26b11e55486\",\"dweb:/ipfs/QmP22fftAc6xeQtFVGwphuWcLokDRTj1eueVj9NsfxbNgP\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010d0380380620010d0833981810160405260208110156200003757600080fd5b5051604080518082018252600981526814d85b9d1a5b595b9d60ba1b6020828101918252835180850190945260038085526229a0a760e91b9185019190915282519293928592859285926200008d929062000256565b508051620000a390600490602084019062000256565b50506005805460ff1916601217905550620000d2620000c1620000dc565b670de0b6b3a76400008302620000e0565b5050505062000302565b3390565b6001600160a01b0382166200013c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200014a60008383620001ef565b6200016681600254620001f460201b620006b81790919060201c565b6002556001600160a01b0382166000908152602081815260409091205462000199918390620006b8620001f4821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000828201838110156200024f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200028e5760008555620002d9565b82601f10620002a957805160ff1916838001178555620002d9565b82800160010185558215620002d9579182015b82811115620002d9578251825591602001919060010190620002bc565b50620002e7929150620002eb565b5090565b5b80821115620002e75760008155600101620002ec565b610dbe80620003126000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac14610319578063a457c2d714610345578063a9059cbb14610371578063dd62ed3e1461039d576100f5565b806340c10f191461028957806356189cb4146102b557806370a08231146102eb57806395d89b4114610311576100f5565b8063222f5be0116100d3578063222f5be0146101d157806323b872dd14610209578063313ce5671461023f578063395093511461025d576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b6101026103cb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b038135169060200135610461565b604080519115158252519081900360200190f35b6101bf61047e565b60408051918252519081900360200190f35b610207600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610484565b005b6101a36004803603606081101561021f57600080fd5b506001600160a01b03813581169160208101359091169060400135610494565b61024761051b565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561027357600080fd5b506001600160a01b038135169060200135610524565b6102076004803603604081101561029f57600080fd5b506001600160a01b038135169060200135610572565b610207600480360360608110156102cb57600080fd5b506001600160a01b03813581169160208101359091169060400135610580565b6101bf6004803603602081101561030157600080fd5b50356001600160a01b031661058b565b6101026105a6565b6102076004803603604081101561032f57600080fd5b506001600160a01b038135169060200135610607565b6101a36004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610611565b6101a36004803603604081101561038757600080fd5b506001600160a01b038135169060200135610679565b6101bf600480360360408110156103b357600080fd5b506001600160a01b038135811691602001351661068d565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050905090565b600061047561046e610719565b848461071d565b50600192915050565b60025490565b61048f838383610809565b505050565b60006104a1848484610809565b610511846104ad610719565b61050c85604051806060016040528060288152602001610cd2602891396001600160a01b038a166000908152600160205260408120906104eb610719565b6001600160a01b031681526020810191909152604001600020549190610964565b61071d565b5060019392505050565b60055460ff1690565b6000610475610531610719565b8461050c8560016000610542610719565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906106b8565b61057c82826109fb565b5050565b61048f83838361071d565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104575780601f1061042c57610100808354040283529160200191610457565b61057c8282610aeb565b600061047561061e610719565b8461050c85604051806060016040528060258152602001610d646025913960016000610648610719565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610964565b6000610475610686610719565b8484610809565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610712576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166107625760405162461bcd60e51b8152600401808060200182810382526024815260200180610d406024913960400191505060405180910390fd5b6001600160a01b0382166107a75760405162461bcd60e51b8152600401808060200182810382526022815260200180610c8a6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661084e5760405162461bcd60e51b8152600401808060200182810382526025815260200180610d1b6025913960400191505060405180910390fd5b6001600160a01b0382166108935760405162461bcd60e51b8152600401808060200182810382526023815260200180610c456023913960400191505060405180910390fd5b61089e83838361048f565b6108db81604051806060016040528060268152602001610cac602691396001600160a01b0386166000908152602081905260409020549190610964565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461090a90826106b8565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109f35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b85781810151838201526020016109a0565b50505050905090810190601f1680156109e55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610a56576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610a626000838361048f565b600254610a6f90826106b8565b6002556001600160a01b038216600090815260208190526040902054610a9590826106b8565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b305760405162461bcd60e51b8152600401808060200182810382526021815260200180610cfa6021913960400191505060405180910390fd5b610b3c8260008361048f565b610b7981604051806060016040528060228152602001610c68602291396001600160a01b0385166000908152602081905260409020549190610964565b6001600160a01b038316600090815260208190526040902055600254610b9f9082610be7565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115610c3e576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c49ca17d811243092364caba1d6e67a3f8dd8fce282b984bdb3a8d60354a77ad64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac14610319578063a457c2d714610345578063a9059cbb14610371578063dd62ed3e1461039d576100f5565b806340c10f191461028957806356189cb4146102b557806370a08231146102eb57806395d89b4114610311576100f5565b8063222f5be0116100d3578063222f5be0146101d157806323b872dd14610209578063313ce5671461023f578063395093511461025d576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b6101026103cb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b038135169060200135610461565b604080519115158252519081900360200190f35b6101bf61047e565b60408051918252519081900360200190f35b610207600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610484565b005b6101a36004803603606081101561021f57600080fd5b506001600160a01b03813581169160208101359091169060400135610494565b61024761051b565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561027357600080fd5b506001600160a01b038135169060200135610524565b6102076004803603604081101561029f57600080fd5b506001600160a01b038135169060200135610572565b610207600480360360608110156102cb57600080fd5b506001600160a01b03813581169160208101359091169060400135610580565b6101bf6004803603602081101561030157600080fd5b50356001600160a01b031661058b565b6101026105a6565b6102076004803603604081101561032f57600080fd5b506001600160a01b038135169060200135610607565b6101a36004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610611565b6101a36004803603604081101561038757600080fd5b506001600160a01b038135169060200135610679565b6101bf600480360360408110156103b357600080fd5b506001600160a01b038135811691602001351661068d565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050905090565b600061047561046e610719565b848461071d565b50600192915050565b60025490565b61048f838383610809565b505050565b60006104a1848484610809565b610511846104ad610719565b61050c85604051806060016040528060288152602001610cd2602891396001600160a01b038a166000908152600160205260408120906104eb610719565b6001600160a01b031681526020810191909152604001600020549190610964565b61071d565b5060019392505050565b60055460ff1690565b6000610475610531610719565b8461050c8560016000610542610719565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906106b8565b61057c82826109fb565b5050565b61048f83838361071d565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104575780601f1061042c57610100808354040283529160200191610457565b61057c8282610aeb565b600061047561061e610719565b8461050c85604051806060016040528060258152602001610d646025913960016000610648610719565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610964565b6000610475610686610719565b8484610809565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610712576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166107625760405162461bcd60e51b8152600401808060200182810382526024815260200180610d406024913960400191505060405180910390fd5b6001600160a01b0382166107a75760405162461bcd60e51b8152600401808060200182810382526022815260200180610c8a6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661084e5760405162461bcd60e51b8152600401808060200182810382526025815260200180610d1b6025913960400191505060405180910390fd5b6001600160a01b0382166108935760405162461bcd60e51b8152600401808060200182810382526023815260200180610c456023913960400191505060405180910390fd5b61089e83838361048f565b6108db81604051806060016040528060268152602001610cac602691396001600160a01b0386166000908152602081905260409020549190610964565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461090a90826106b8565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156109f35760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109b85781810151838201526020016109a0565b50505050905090810190601f1680156109e55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610a56576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610a626000838361048f565b600254610a6f90826106b8565b6002556001600160a01b038216600090815260208190526040902054610a9590826106b8565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610b305760405162461bcd60e51b8152600401808060200182810382526021815260200180610cfa6021913960400191505060405180910390fd5b610b3c8260008361048f565b610b7981604051806060016040528060228152602001610c68602291396001600160a01b0385166000908152602081905260409020549190610964565b6001600160a01b038316600090815260208190526040902055600254610b9f9082610be7565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082821115610c3e576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c49ca17d811243092364caba1d6e67a3f8dd8fce282b984bdb3a8d60354a77ad64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "192:177:17:-:0;;;228:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;228:139:17;200:192:16;;;;;;;;;;;-1:-1:-1;;;228:139:17;200:192:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;200:192:16;;;;;;;2032:13:34;;200:192:16;;;228:139:17;;200:192:16;;;;2032:13:34;;200:192:16;2032:13:34;:::i;:::-;-1:-1:-1;2055:17:34;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:34;:14;;-1:-1:-1;;2082:14:34;2094:2;2082:14;;;-1:-1:-1;343:42:16::1;349:12;:10;:12::i;:::-;377:7;363:21:::0;::::1;343:5;:42::i;:::-;200:192:::0;;;228:139:17;192:177;;598:104:45;685:10;598:104;:::o;7832:370:34:-;-1:-1:-1;;;;;7915:21:34;;7907:65;;;;;-1:-1:-1;;;7907:65:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;:16;;;;;;:24;;;;:::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:34;;:9;:18;;;;;;;;;;;;:30;;8136:6;;8113:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8092:18:34;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o;2690:175:33:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:33:o;192:177:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;192:177:17;;;-1:-1:-1;192:177:17;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "192:177:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4244:166:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;596:147:16;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;596:147:16;;;;;;;;;;;;;;;;;:::i;:::-;;4877:317:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4877:317:34;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5589:215:34;;;;;;;;:::i;398:93:16:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;398:93:16;;;;;;;;:::i;749:157::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;749:157:16;;;;;;;;;;;;;;;;;:::i;3399:125:34:-;;;;;;;;;;;;;;;;-1:-1:-1;3399:125:34;-1:-1:-1;;;;;3399:125:34;;:::i;2370:93::-;;;:::i;497::16:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;497:93:16;;;;;;;;:::i;6291:266:34:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6291:266:34;;;;;;;;:::i;3727:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3727:172:34;;;;;;;;:::i;3957:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3957:149:34;;;;;;;;;;:::i;2168:89::-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:34;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;596:147:16:-;710:26;720:4;726:2;730:5;710:9;:26::i;:::-;596:147;;;:::o;4877:317:34:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:34;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:34;;;;;;;;;;;;-1:-1:-1;5076:33:34;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:34;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:34;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:34;;;:34;;;;;;;;;;;:38;:50::i;398:93:16:-;462:22;468:7;477:6;462:5;:22::i;:::-;398:93;;:::o;749:157::-;868:31;877:5;884:7;893:5;868:8;:31::i;3399:125:34:-;-1:-1:-1;;;;;3499:18:34;3473:7;3499:18;;;;;;;;;;;;3399:125::o;2370:93::-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;497:93:16;561:22;567:7;576:6;561:5;:22::i;6291:266:34:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:34;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:34;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:34;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;2690:175:33:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:33:o;598:104:45:-;685:10;598:104;:::o;9355:340:34:-;-1:-1:-1;;;;;9456:19:34;;9448:68;;;;-1:-1:-1;;;9448:68:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:34;;9526:68;;;;-1:-1:-1;;;9526:68:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:34;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:34;;7128:70;;;;-1:-1:-1;;;7128:70:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:34;;7208:71;;;;-1:-1:-1;;;7208:71:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:34;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:34;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:34;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:33:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:33;;;5432:163::o;7832:370:34:-;-1:-1:-1;;;;;7915:21:34;;7907:65;;;;;-1:-1:-1;;;7907:65:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:34;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:34;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;8522:410::-;-1:-1:-1;;;;;8605:21:34;;8597:67;;;;-1:-1:-1;;;8597:67:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8756:18:34;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8735:18:34;;:9;:18;;;;;;;;;;:89;8849:12;;:24;;8866:6;8849:16;:24::i;:::-;8834:12;:39;8888:37;;;;;;;;8914:1;;-1:-1:-1;;;;;8888:37:34;;;;;;;;;;;;8522:410;;:::o;3136:155:33:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:33;;;3136:155::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.6;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./ERC20Mock.sol\";\n\ncontract SanMock is ERC20Mock {\n    constructor(uint256 totalSupply)\n        ERC20Mock(\"Santiment\", \"SAN\", totalSupply)\n    // solhint-disable-next-line no-empty-blocks\n    {}\n}\n",
  "sourcePath": "/home/nailkhaf/Projects/san-games/contracts/mock/SanMock.sol",
  "ast": {
    "absolutePath": "/home/nailkhaf/Projects/san-games/contracts/mock/SanMock.sol",
    "exportedSymbols": {
      "Context": [
        7928
      ],
      "ERC20": [
        6116
      ],
      "ERC20Mock": [
        3119
      ],
      "IERC20": [
        6231
      ],
      "SafeMath": [
        5613
      ],
      "SanMock": [
        3138
      ]
    },
    "id": 3139,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3121,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3122,
        "nodeType": "ImportDirective",
        "scope": 3139,
        "sourceUnit": 7929,
        "src": "57:51:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3123,
        "nodeType": "ImportDirective",
        "scope": 3139,
        "sourceUnit": 6117,
        "src": "109:55:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/nailkhaf/Projects/san-games/contracts/mock/ERC20Mock.sol",
        "file": "./ERC20Mock.sol",
        "id": 3124,
        "nodeType": "ImportDirective",
        "scope": 3139,
        "sourceUnit": 3120,
        "src": "165:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3125,
              "name": "ERC20Mock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3119,
              "src": "212:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mock_$3119",
                "typeString": "contract ERC20Mock"
              }
            },
            "id": 3126,
            "nodeType": "InheritanceSpecifier",
            "src": "212:9:17"
          }
        ],
        "contractDependencies": [
          3119,
          6116,
          6231,
          7928
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3138,
        "linearizedBaseContracts": [
          3138,
          3119,
          6116,
          6231,
          7928
        ],
        "name": "SanMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3136,
              "nodeType": "Block",
              "src": "365:2:17",
              "statements": []
            },
            "id": 3137,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "53616e74696d656e74",
                    "id": 3131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "279:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_82395c688462ffc1684dc0ca7b12c7b2cd0f0229d7ae67f281049c4c468803d9",
                      "typeString": "literal_string \"Santiment\""
                    },
                    "value": "Santiment"
                  },
                  {
                    "hexValue": "53414e",
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "292:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_76bf741ea85eb52a48692d82c293bd89c6a062796cbc3a7de10a0028e3930918",
                      "typeString": "literal_string \"SAN\""
                    },
                    "value": "SAN"
                  },
                  {
                    "id": 3133,
                    "name": "totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3128,
                    "src": "299:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3134,
                "modifierName": {
                  "id": 3130,
                  "name": "ERC20Mock",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3119,
                  "src": "269:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mock_$3119_$",
                    "typeString": "type(contract ERC20Mock)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "269:42:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3128,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "240:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "239:21:17"
            },
            "returnParameters": {
              "id": 3135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:17"
            },
            "scope": 3138,
            "src": "228:139:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3139,
        "src": "192:177:17"
      }
    ],
    "src": "32:338:17"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/nailkhaf/Projects/san-games/contracts/mock/SanMock.sol",
      "exportedSymbols": {
        "Context": [
          7928
        ],
        "ERC20": [
          6116
        ],
        "ERC20Mock": [
          3119
        ],
        "IERC20": [
          6231
        ],
        "SafeMath": [
          5613
        ],
        "SanMock": [
          3138
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".6"
          ]
        },
        "id": 3121,
        "name": "PragmaDirective",
        "src": "32:23:17"
      },
      {
        "attributes": {
          "SourceUnit": 7929,
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "file": "@openzeppelin/contracts/utils/Context.sol",
          "scope": 3139,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3122,
        "name": "ImportDirective",
        "src": "57:51:17"
      },
      {
        "attributes": {
          "SourceUnit": 6117,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 3139,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3123,
        "name": "ImportDirective",
        "src": "109:55:17"
      },
      {
        "attributes": {
          "SourceUnit": 3120,
          "absolutePath": "/home/nailkhaf/Projects/san-games/contracts/mock/ERC20Mock.sol",
          "file": "./ERC20Mock.sol",
          "scope": 3139,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3124,
        "name": "ImportDirective",
        "src": "165:25:17"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            3119,
            6116,
            6231,
            7928
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3138,
            3119,
            6116,
            6231,
            7928
          ],
          "name": "SanMock",
          "scope": 3139
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20Mock",
                  "referencedDeclaration": 3119,
                  "type": "contract ERC20Mock"
                },
                "id": 3125,
                "name": "UserDefinedTypeName",
                "src": "212:9:17"
              }
            ],
            "id": 3126,
            "name": "InheritanceSpecifier",
            "src": "212:9:17"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 3138,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "scope": 3137,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3127,
                        "name": "ElementaryTypeName",
                        "src": "240:7:17"
                      }
                    ],
                    "id": 3128,
                    "name": "VariableDeclaration",
                    "src": "240:19:17"
                  }
                ],
                "id": 3129,
                "name": "ParameterList",
                "src": "239:21:17"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3135,
                "name": "ParameterList",
                "src": "365:0:17"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3119,
                      "type": "type(contract ERC20Mock)",
                      "value": "ERC20Mock"
                    },
                    "id": 3130,
                    "name": "Identifier",
                    "src": "269:9:17"
                  },
                  {
                    "attributes": {
                      "hexvalue": "53616e74696d656e74",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Santiment\"",
                      "value": "Santiment"
                    },
                    "id": 3131,
                    "name": "Literal",
                    "src": "279:11:17"
                  },
                  {
                    "attributes": {
                      "hexvalue": "53414e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"SAN\"",
                      "value": "SAN"
                    },
                    "id": 3132,
                    "name": "Literal",
                    "src": "292:5:17"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3128,
                      "type": "uint256",
                      "value": "totalSupply"
                    },
                    "id": 3133,
                    "name": "Identifier",
                    "src": "299:11:17"
                  }
                ],
                "id": 3134,
                "name": "ModifierInvocation",
                "src": "269:42:17"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 3136,
                "name": "Block",
                "src": "365:2:17"
              }
            ],
            "id": 3137,
            "name": "FunctionDefinition",
            "src": "228:139:17"
          }
        ],
        "id": 3138,
        "name": "ContractDefinition",
        "src": "192:177:17"
      }
    ],
    "id": 3139,
    "name": "SourceUnit",
    "src": "32:338:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-18T13:57:56.639Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}